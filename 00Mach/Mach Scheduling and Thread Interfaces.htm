<!DOCTYPE html>
<!-- saved from url=(0118)https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/scheduler/scheduler.html -->
<html lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

    <title>Mach Scheduling and Thread Interfaces</title>
    <meta http-equiv="X-UA-Compatible" content="IE=7">
    
    <meta id="book-resource-type" name="book-resource-type" content="Guide">
    <meta scheme="apple_ref" id="identifier" name="identifier" content="//apple_ref/doc/uid/TP30000905">
    <meta id="document-version" name="document-version" content="6.6.0">
    <meta id="build" name="build" content="c1e4c7a89af8f899a21cfa81fc33ba42">
    <meta id="chapterId" name="chapterId" content="TP30000905-CH211">
    <meta id="date" name="date" content="2013-08-08">
    <meta id="description" name="description" content="Essential information for programming in the OS X kernel. Includes a high-level overview.">
    <meta id="book-title" name="book-title" content="Kernel Programming Guide">
    <meta id="book-root" name="book-root" content="../">
    <meta id="book-json" name="book-json" content="../book.json">
    <meta id="devcenter" name="devcenter" content="Mac Dev Center">
    <meta id="devcenter-url" name="devcenter-url" content="http://developer.apple.com/devcenter/mac">
    <meta id="reflib" name="reflib" content="Documentation Archive">
    <meta id="book-assignments" name="book-assignments" content="{Type/Guide}, {Technologies/Kernel &amp; Driver Layer/Kernel}, {Topic/Drivers, Kernel, &amp; Hardware/General Kernel Extensions}">
    
    
    <meta id="copyright" name="copyright" content="Copyright 2018 Apple Inc. All Rights Reserved.">
    <meta id="xcode-display" name="xcode-display" content="render">
    <meta id="IndexTitle" name="IndexTitle" content="Kernel Programming Guide: Mach Scheduling and Thread Interfaces">
    <meta id="resources-uri" name="resources-uri" content="../../../../../Resources/1282">
    <link id="book-index-page" rel="Start" title="Kernel Programming Guide" type="text/html" href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/index.html">
    <link id="next-page" rel="Next" type="text/html" href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/contexts/contexts.html">
    <link id="previous-page" rel="Prev" type="text/html" href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/vm/vm.html">
    <link rel="stylesheet" type="text/css" href="./Mach Scheduling and Thread Interfaces_files/screen.css">
    
    <!-- xcode_css -->
    <link rel="stylesheet" type="text/css" href="./Mach Scheduling and Thread Interfaces_files/feedback.css">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
	<meta id="platforms" name="platforms" content="">
</head>    
<body class="isShowingTOC" id=""><a name="//apple_ref/doc/uid/TP30000905-CH211" title="Mach Scheduling and Thread Interfaces"></a>
    <div id="_omniture_top">
    <!-- SiteCatalyst code version: H.8. Copyright 1997-2006 Omniture, Inc. -->
    <script type="text/javascript">
    /* RSID: */
    var s_account="appleglobal,appleusdeveloper,dappdeveloperlib"
    </script>

    <script type="text/javascript" src="./Mach Scheduling and Thread Interfaces_files/s_code_h.js"></script>
    <script type="text/javascript">
    s.pageName=AC.Tracking.pageName();
    s.channel="www.us.developer"

    /************* DO NOT ALTER ANYTHING BELOW THIS LINE ! **************/
    var s_code=s.t();if(s_code)document.write(s_code)</script>
    <!-- End SiteCatalyst code version: H.8. -->
    </div>

    <div id="adcHeader" class="hideOnPrint hideInXcode">
        <div id="ssi_Header" class="hideInXcode unified">
            <a id="ssi_LibraryTitle" href="https://developer.apple.com/library/archive/navigation/" onclick="s_objectID=&quot;https://developer.apple.com/library/archive/navigation/_1&quot;;return this.s_oc?this.s_oc(e):true">Documentation Archive</a>
            <a id="ssi_AppleDeveloperConnection" href="https://developer.apple.com/" onclick="s_objectID=&quot;https://developer.apple.com/_1&quot;;return this.s_oc?this.s_oc(e):true">Developer</a>
            <div id="ssi_SearchButton" role="button" title="Search">Search</div>
        </div>
        <form id="ssi_SearchMenu" method="get" action="https://developer.apple.com/library/archive/search/" accept-charset="utf-8">
            <label for="adcsearch">Search Documentation Archive</label>
            
            
    
            <input type="search" id="ssi_SearchField" name="q" accesskey="s" results="5">
        </form>
    </div>

    <header id="header">
        <div id="title" role="banner">
            <h1>Kernel Programming Guide</h1>
            <span id="file_links">
                <a id="PDF_link" role="button" tabindex="4" rel="alternate" title="Download PDF" class=""><span id="pdf_icon"></span>PDF</a>
                <a id="Companion_link" role="button" tabindex="3" title="Download Companion File" class=""><span id="companion_icon"></span>Companion File</a>
            </span>
        </div>
        <ul id="headerButtons" class="hideOnPrint" role="toolbar">
            <li id="toc_button" style="">
                <button tabindex="5" id="table_of_contents" class="open" role="checkbox" aria-label="Show Table of Contents"><span class="disclosure"></span>Table of Contents</button>
            </li>
            <li id="jumpto_button" style="display:none" role="navigation"><select tabindex="6" id="jumpTo"><option value="top">Jump Toâ€¦</option></select></li>
            <li id="downloadSample_button" style="display:none">
                <a id="Sample_link"><button id="Sample_button">Download Sample Code</button></a>
            </li>
        </ul>
    </header>
    <nav id="tocContainer" tabindex="7" class="isShowingTOC">
        <ul id="toc" role="tree"><li class="children " data-aref="//apple_ref/doc/uid/TP30000905-CH204-TPXREF101" role="treeitem"><span class="disclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/About/About.html#//apple_ref/doc/uid/TP30000905-CH204-TPXREF101">About This Document</a></span><ul><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH204-TPXREF102"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/About/About.html#//apple_ref/doc/uid/TP30000905-CH204-TPXREF102">Who Should Read This Document</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH204-TPXREF103"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/About/About.html#//apple_ref/doc/uid/TP30000905-CH204-TPXREF103">Road Map</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH204-TPXREF104"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/About/About.html#//apple_ref/doc/uid/TP30000905-CH204-TPXREF104">Other Apple Publications</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH204-CHDHDDGC"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/About/About.html#//apple_ref/doc/uid/TP30000905-CH204-CHDHDDGC">Mach API Reference</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH204-TPXREF105"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/About/About.html#//apple_ref/doc/uid/TP30000905-CH204-TPXREF105">Information on the Web</a></span></li></ul></li><li class="children " data-aref="//apple_ref/doc/uid/TP30000905-CH205-BEHJDFCA" role="treeitem"><span class="disclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/keepout/keepout.html#//apple_ref/doc/uid/TP30000905-CH205-BEHJDFCA">Keep Out</a></span><ul><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH205-TPXREF108"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/keepout/keepout.html#//apple_ref/doc/uid/TP30000905-CH205-TPXREF108">Why You Should Avoid Programming in the Kernel</a></span></li></ul></li><li class="children " data-aref="//apple_ref/doc/uid/TP30000905-CH1g-CACDAEDC" role="treeitem"><span class="disclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/Architecture/Architecture.html#//apple_ref/doc/uid/TP30000905-CH1g-CACDAEDC">Kernel Architecture Overview</a></span><ul><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH1g-TPXREF101"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/Architecture/Architecture.html#//apple_ref/doc/uid/TP30000905-CH1g-TPXREF101">Darwin</a></span></li><li class="children " data-aref="//apple_ref/doc/uid/TP30000905-CH1g-TPXREF102" role="treeitem"><span class="disclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/Architecture/Architecture.html#//apple_ref/doc/uid/TP30000905-CH1g-TPXREF102">Architecture</a></span><ul><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH1g-TPXREF103"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/Architecture/Architecture.html#//apple_ref/doc/uid/TP30000905-CH1g-TPXREF103">Mach</a></span></li><li class="children " data-aref="//apple_ref/doc/uid/TP30000905-CH1g-TPXREF104" role="treeitem"><span class="disclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/Architecture/Architecture.html#//apple_ref/doc/uid/TP30000905-CH1g-TPXREF104">BSD</a></span><ul><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH1g-TPXREF106"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/Architecture/Architecture.html#//apple_ref/doc/uid/TP30000905-CH1g-TPXREF106">Networking</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH1g-TPXREF107"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/Architecture/Architecture.html#//apple_ref/doc/uid/TP30000905-CH1g-TPXREF107">File Systems</a></span></li></ul></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH1g-TPXREF105"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/Architecture/Architecture.html#//apple_ref/doc/uid/TP30000905-CH1g-TPXREF105">I/O Kit</a></span></li></ul></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH1g-TPXREF108"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/Architecture/Architecture.html#//apple_ref/doc/uid/TP30000905-CH1g-TPXREF108">Kernel Extensions</a></span></li></ul></li><li class="children " data-aref="//apple_ref/doc/uid/TP30000905-SW2-BAJJBJEG" role="treeitem"><span class="disclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/booting/booting.html#//apple_ref/doc/uid/TP30000905-SW2-BAJJBJEG">The Early Boot Process</a></span><ul><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-SW2-100040-TPXREF103"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/booting/booting.html#//apple_ref/doc/uid/TP30000905-SW2-100040-TPXREF103">Boot ROM</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-SW2-115736-TPXREF104"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/booting/booting.html#//apple_ref/doc/uid/TP30000905-SW2-115736-TPXREF104">The Boot Loader</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-SW2-SW2"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/booting/booting.html#//apple_ref/doc/uid/TP30000905-SW2-SW2">Rooting</a></span></li></ul></li><li class="children " data-aref="//apple_ref/doc/uid/TP30000905-CH206-BEHJDFCA" role="treeitem"><span class="disclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/security/security.html#//apple_ref/doc/uid/TP30000905-CH206-BEHJDFCA">Security Considerations</a></span><ul><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH206-TPXREF108"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/security/security.html#//apple_ref/doc/uid/TP30000905-CH206-TPXREF108">Security Implications of Paging</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH206-TPXREF109"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/security/security.html#//apple_ref/doc/uid/TP30000905-CH206-TPXREF109">Buffer Overflows and Invalid Input</a></span></li><li class="children " data-aref="//apple_ref/doc/uid/TP30000905-CH206-TPXREF110" role="treeitem"><span class="disclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/security/security.html#//apple_ref/doc/uid/TP30000905-CH206-TPXREF110">User Credentials</a></span><ul><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH206-SW2"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/security/security.html#//apple_ref/doc/uid/TP30000905-CH206-SW2">Basic User Credentials</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH206-SW4"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/security/security.html#//apple_ref/doc/uid/TP30000905-CH206-SW4">Access Control Lists</a></span></li></ul></li><li class="children " data-aref="//apple_ref/doc/uid/TP30000905-CH206-CDDBJFHC" role="treeitem"><span class="disclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/security/security.html#//apple_ref/doc/uid/TP30000905-CH206-CDDBJFHC">Remote Authentication</a></span><ul><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH206-TPXREF111"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/security/security.html#//apple_ref/doc/uid/TP30000905-CH206-TPXREF111">One-Time Pads</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH206-TPXREF112"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/security/security.html#//apple_ref/doc/uid/TP30000905-CH206-TPXREF112">Time-based authentication</a></span></li></ul></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH206-TPXREF113"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/security/security.html#//apple_ref/doc/uid/TP30000905-CH206-TPXREF113">Temporary Files</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH206-TPXREF114"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/security/security.html#//apple_ref/doc/uid/TP30000905-CH206-TPXREF114">/dev/mem  and  /dev/kmem</a></span></li><li class="children " data-aref="//apple_ref/doc/uid/TP30000905-CH206-CDDHHEFC" role="treeitem"><span class="disclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/security/security.html#//apple_ref/doc/uid/TP30000905-CH206-CDDHHEFC">Key-based Authentication and Encryption</a></span><ul><li class="children " data-aref="//apple_ref/doc/uid/TP30000905-CH206-TPXREF121" role="treeitem"><span class="disclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/security/security.html#//apple_ref/doc/uid/TP30000905-CH206-TPXREF121">Public Key Weaknesses</a></span><ul><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH206-TPXREF122"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/security/security.html#//apple_ref/doc/uid/TP30000905-CH206-TPXREF122">Trust Models</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH206-TPXREF123"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/security/security.html#//apple_ref/doc/uid/TP30000905-CH206-TPXREF123">Sensitivity to Patterns and Short Messages</a></span></li></ul></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH206-TPXREF117"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/security/security.html#//apple_ref/doc/uid/TP30000905-CH206-TPXREF117">Using Public Keys for Message Exchange</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH206-TPXREF118"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/security/security.html#//apple_ref/doc/uid/TP30000905-CH206-TPXREF118">Using Public Keys for Identity Verification</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH206-TPXREF119"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/security/security.html#//apple_ref/doc/uid/TP30000905-CH206-TPXREF119">Using Public Keys for Data Integrity Checking</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH206-TPXREF120"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/security/security.html#//apple_ref/doc/uid/TP30000905-CH206-TPXREF120">Encryption Summary</a></span></li></ul></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH206-TPXREF115"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/security/security.html#//apple_ref/doc/uid/TP30000905-CH206-TPXREF115">Console Debugging</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH206-TPXREF116"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/security/security.html#//apple_ref/doc/uid/TP30000905-CH206-TPXREF116">Code Passing</a></span></li></ul></li><li class="children " data-aref="//apple_ref/doc/uid/TP30000905-CH207-BEHJDFCA" role="treeitem"><span class="disclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/performance/performance.html#//apple_ref/doc/uid/TP30000905-CH207-BEHJDFCA">Performance Considerations</a></span><ul><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH207-TPXREF108"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/performance/performance.html#//apple_ref/doc/uid/TP30000905-CH207-TPXREF108">Interrupt Latency</a></span></li><li class="children " data-aref="//apple_ref/doc/uid/TP30000905-CH207-TPXREF109" role="treeitem"><span class="disclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/performance/performance.html#//apple_ref/doc/uid/TP30000905-CH207-TPXREF109">Locking Bottlenecks</a></span><ul><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH207-TPXREF110"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/performance/performance.html#//apple_ref/doc/uid/TP30000905-CH207-TPXREF110">Working With Highly Contended Locks</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH207-TPXREF111"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/performance/performance.html#//apple_ref/doc/uid/TP30000905-CH207-TPXREF111">Reducing Contention by Decreasing Granularity</a></span></li></ul></li><li class="children " data-aref="//apple_ref/doc/uid/TP30000905-CH207-TPXREF112" role="treeitem"><span class="disclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/performance/performance.html#//apple_ref/doc/uid/TP30000905-CH207-TPXREF112">Code Profiling</a></span><ul><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH207-TPXREF113"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/performance/performance.html#//apple_ref/doc/uid/TP30000905-CH207-TPXREF113">Using Counters for Code Profiling</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH207-TPXREF114"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/performance/performance.html#//apple_ref/doc/uid/TP30000905-CH207-TPXREF114">Lock Profiling</a></span></li></ul></li></ul></li><li class="children " data-aref="//apple_ref/doc/uid/TP30000905-CH208-BEHJDFCA" role="treeitem"><span class="disclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/style/style.html#//apple_ref/doc/uid/TP30000905-CH208-BEHJDFCA">Kernel Programming Style</a></span><ul><li class="children " data-aref="//apple_ref/doc/uid/TP30000905-CH208-CIADFJJI" role="treeitem"><span class="disclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/style/style.html#//apple_ref/doc/uid/TP30000905-CH208-CIADFJJI">C++ Naming Conventions</a></span><ul><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH208-TPXREF108"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/style/style.html#//apple_ref/doc/uid/TP30000905-CH208-TPXREF108">Basic Conventions</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH208-TPXREF109"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/style/style.html#//apple_ref/doc/uid/TP30000905-CH208-TPXREF109">Additional Guidelines</a></span></li></ul></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH208-CIADJCFH"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/style/style.html#//apple_ref/doc/uid/TP30000905-CH208-CIADJCFH">Standard C Naming Conventions</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH208-TPXREF110"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/style/style.html#//apple_ref/doc/uid/TP30000905-CH208-TPXREF110">Commonly Used Functions</a></span></li><li class="children " data-aref="//apple_ref/doc/uid/TP30000905-CH208-CIAFCEBB" role="treeitem"><span class="disclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/style/style.html#//apple_ref/doc/uid/TP30000905-CH208-CIAFCEBB">Performance and Stability Tips</a></span><ul><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH208-TPXREF111"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/style/style.html#//apple_ref/doc/uid/TP30000905-CH208-TPXREF111">Performance and Stability Tips</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH208-TPXREF112"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/style/style.html#//apple_ref/doc/uid/TP30000905-CH208-TPXREF112">Stability Tips</a></span></li></ul></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH208-TPXREF113"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/style/style.html#//apple_ref/doc/uid/TP30000905-CH208-TPXREF113">Style Summary</a></span></li></ul></li><li class="children " data-aref="//apple_ref/doc/uid/TP30000905-CH209-TPXREF101" role="treeitem"><span class="disclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/Mach/Mach.html#//apple_ref/doc/uid/TP30000905-CH209-TPXREF101">Mach Overview</a></span><ul><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH209-TPXREF102"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/Mach/Mach.html#//apple_ref/doc/uid/TP30000905-CH209-TPXREF102">Mach Kernel Abstractions</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH209-TPXREF103"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/Mach/Mach.html#//apple_ref/doc/uid/TP30000905-CH209-TPXREF103">Tasks and Threads</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH209-TPXREF104"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/Mach/Mach.html#//apple_ref/doc/uid/TP30000905-CH209-TPXREF104">Ports, Port Rights, Port Sets, and Port Namespaces</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH209-TPXREF105"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/Mach/Mach.html#//apple_ref/doc/uid/TP30000905-CH209-TPXREF105">Memory Management</a></span></li><li class="children " data-aref="//apple_ref/doc/uid/TP30000905-CH209-CEGJEIAG" role="treeitem"><span class="disclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/Mach/Mach.html#//apple_ref/doc/uid/TP30000905-CH209-CEGJEIAG">Interprocess Communication (IPC)</a></span><ul><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH209-CEGBBEBF"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/Mach/Mach.html#//apple_ref/doc/uid/TP30000905-CH209-CEGBBEBF">IPC Transactions and Event Dispatching</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH209-TPXREF106"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/Mach/Mach.html#//apple_ref/doc/uid/TP30000905-CH209-TPXREF106">Message Queues</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH209-TPXREF107"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/Mach/Mach.html#//apple_ref/doc/uid/TP30000905-CH209-TPXREF107">Semaphores</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH209-TPXREF108"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/Mach/Mach.html#//apple_ref/doc/uid/TP30000905-CH209-TPXREF108">Notifications</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH209-TPXREF109"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/Mach/Mach.html#//apple_ref/doc/uid/TP30000905-CH209-TPXREF109">Locks</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH209-TPXREF110"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/Mach/Mach.html#//apple_ref/doc/uid/TP30000905-CH209-TPXREF110">Remote Procedure Call (RPC) Objects</a></span></li></ul></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH209-TPXREF111"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/Mach/Mach.html#//apple_ref/doc/uid/TP30000905-CH209-TPXREF111">Time Management</a></span></li></ul></li><li class="children " data-aref="//apple_ref/doc/uid/TP30000905-CH210-BEHJDFCA" role="treeitem"><span class="disclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/vm/vm.html#//apple_ref/doc/uid/TP30000905-CH210-BEHJDFCA">Memory and Virtual Memory</a></span><ul><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH210-CHDEDGCA"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/vm/vm.html#//apple_ref/doc/uid/TP30000905-CH210-CHDEDGCA">OS X VM Overview</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH210-CHDGIDHB"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/vm/vm.html#//apple_ref/doc/uid/TP30000905-CH210-CHDGIDHB">Memory Maps Explained</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH210-TPXREF109"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/vm/vm.html#//apple_ref/doc/uid/TP30000905-CH210-TPXREF109">Named Entries</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH210-CHDIFICG"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/vm/vm.html#//apple_ref/doc/uid/TP30000905-CH210-CHDIFICG">Universal Page Lists (UPLs)</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH210-CHDBJBEJ"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/vm/vm.html#//apple_ref/doc/uid/TP30000905-CH210-CHDBJBEJ">Using Mach Memory Maps</a></span></li><li class="children " data-aref="//apple_ref/doc/uid/TP30000905-CH210-CHDJBFBC" role="treeitem"><span class="disclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/vm/vm.html#//apple_ref/doc/uid/TP30000905-CH210-CHDJBFBC">Other VM and VM-Related Subsystems</a></span><ul><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH210-TPXREF110"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/vm/vm.html#//apple_ref/doc/uid/TP30000905-CH210-TPXREF110">Pagers</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH210-TPXREF111"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/vm/vm.html#//apple_ref/doc/uid/TP30000905-CH210-TPXREF111">Working Set Detection Subsystem</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH210-TPXREF112"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/vm/vm.html#//apple_ref/doc/uid/TP30000905-CH210-TPXREF112">VM Shared Memory Server Subsystem</a></span></li></ul></li><li class="children " data-aref="//apple_ref/doc/uid/TP30000905-CH210-CHDBCBCB" role="treeitem"><span class="disclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/vm/vm.html#//apple_ref/doc/uid/TP30000905-CH210-CHDBCBCB">Address Spaces</a></span><ul><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH210-TPXREF113"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/vm/vm.html#//apple_ref/doc/uid/TP30000905-CH210-TPXREF113">Background Info on PCI Address Translation</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH210-TPXREF114"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/vm/vm.html#//apple_ref/doc/uid/TP30000905-CH210-TPXREF114">IOMemoryDescriptor Changes</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH210-TPXREF115"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/vm/vm.html#//apple_ref/doc/uid/TP30000905-CH210-TPXREF115">VM System and  pmap Changes:</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH210-TPXREF116"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/vm/vm.html#//apple_ref/doc/uid/TP30000905-CH210-TPXREF116">Kernel Dependency Changes</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH210-TPXREF117"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/vm/vm.html#//apple_ref/doc/uid/TP30000905-CH210-TPXREF117">Summary</a></span></li></ul></li><li class="children " data-aref="//apple_ref/doc/uid/TP30000905-CH210-CHDHIIJF" role="treeitem"><span class="disclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/vm/vm.html#//apple_ref/doc/uid/TP30000905-CH210-CHDHIIJF">Allocating Memory in the Kernel</a></span><ul><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH210-SW3"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/vm/vm.html#//apple_ref/doc/uid/TP30000905-CH210-SW3">Allocating Memory From a Non-I/O-Kit Kernel Extension</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH210-TPXREF108"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/vm/vm.html#//apple_ref/doc/uid/TP30000905-CH210-TPXREF108">Allocating Memory From the I/O Kit</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH210-CHDBGHAC"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/vm/vm.html#//apple_ref/doc/uid/TP30000905-CH210-CHDBGHAC">Allocating Memory In the Kernel Itself</a></span></li></ul></li></ul></li><li class="children " data-aref="//apple_ref/doc/uid/TP30000905-CH211-BEHJDFCA" role="treeitem"><span class="disclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/scheduler/scheduler.html#//apple_ref/doc/uid/TP30000905-CH211-BEHJDFCA">Mach Scheduling and Thread Interfaces</a></span><ul><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH211-BABFGDHA"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/scheduler/scheduler.html#//apple_ref/doc/uid/TP30000905-CH211-BABFGDHA">Overview of Scheduling</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH211-TPXREF108"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/scheduler/scheduler.html#//apple_ref/doc/uid/TP30000905-CH211-TPXREF108">Why Did My Thread Priority Change?</a></span></li><li class="children " data-aref="//apple_ref/doc/uid/TP30000905-CH211-BABCHEEB" role="treeitem"><span class="disclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/scheduler/scheduler.html#//apple_ref/doc/uid/TP30000905-CH211-BABCHEEB">Using Mach Scheduling From User Applications</a></span><ul><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH211-TPXREF109"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/scheduler/scheduler.html#//apple_ref/doc/uid/TP30000905-CH211-TPXREF109">Using the pthreads API to Influence Scheduling</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH211-BABHGEFA"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/scheduler/scheduler.html#//apple_ref/doc/uid/TP30000905-CH211-BABHGEFA">Using the Mach Thread API to Influence Scheduling</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH211-TPXREF110"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/scheduler/scheduler.html#//apple_ref/doc/uid/TP30000905-CH211-TPXREF110">Using the Mach Task API to Influence Scheduling</a></span></li></ul></li><li class="children " data-aref="//apple_ref/doc/uid/TP30000905-CH211-BABBEEBI" role="treeitem"><span class="disclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/scheduler/scheduler.html#//apple_ref/doc/uid/TP30000905-CH211-BABBEEBI">Kernel Thread APIs</a></span><ul><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH211-TPXREF111"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/scheduler/scheduler.html#//apple_ref/doc/uid/TP30000905-CH211-TPXREF111">Creating and Destroying Kernel Threads</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH211-TPXREF112"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/scheduler/scheduler.html#//apple_ref/doc/uid/TP30000905-CH211-TPXREF112">SPL  and Friends</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH211-TPXREF113"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/scheduler/scheduler.html#//apple_ref/doc/uid/TP30000905-CH211-TPXREF113">Wait Queues and Wait Primitives</a></span></li></ul></li></ul></li><li class="children " data-aref="//apple_ref/doc/uid/TP30000905-CH212-BEHJDFCA" role="treeitem"><span class="disclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/contexts/contexts.html#//apple_ref/doc/uid/TP30000905-CH212-BEHJDFCA">Bootstrap Contexts</a></span><ul><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH212-TPXREF108"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/contexts/contexts.html#//apple_ref/doc/uid/TP30000905-CH212-TPXREF108">How Contexts Affect Users</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH212-TPXREF109"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/contexts/contexts.html#//apple_ref/doc/uid/TP30000905-CH212-TPXREF109">How Contexts Affect Developers</a></span></li></ul></li><li class="children " data-aref="//apple_ref/doc/uid/TP30000905-CH213-SW1" role="treeitem"><span class="disclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/IOKit/IOKit.html#//apple_ref/doc/uid/TP30000905-CH213-SW1">I/O Kit Overview</a></span><ul><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH213-TPXREF101"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/IOKit/IOKit.html#//apple_ref/doc/uid/TP30000905-CH213-TPXREF101">Redesigning the I/O Model</a></span></li><li class="children " data-aref="//apple_ref/doc/uid/TP30000905-CH213-BEHEFHEH" role="treeitem"><span class="disclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/IOKit/IOKit.html#//apple_ref/doc/uid/TP30000905-CH213-BEHEFHEH">I/O Kit Architecture</a></span><ul><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH213-TPXREF102"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/IOKit/IOKit.html#//apple_ref/doc/uid/TP30000905-CH213-TPXREF102">Families</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH213-BEHDCDDC"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/IOKit/IOKit.html#//apple_ref/doc/uid/TP30000905-CH213-BEHDCDDC">Drivers</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH213-TPXREF103"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/IOKit/IOKit.html#//apple_ref/doc/uid/TP30000905-CH213-TPXREF103">Nubs</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH213-TPXREF104"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/IOKit/IOKit.html#//apple_ref/doc/uid/TP30000905-CH213-TPXREF104">Connection Example</a></span></li></ul></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH213-BEHEGHEG"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/IOKit/IOKit.html#//apple_ref/doc/uid/TP30000905-CH213-BEHEGHEG">For More Information</a></span></li></ul></li><li class="children " data-aref="//apple_ref/doc/uid/TP30000905-CH214-TPXREF101" role="treeitem"><span class="disclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/BSD/BSD.html#//apple_ref/doc/uid/TP30000905-CH214-TPXREF101">BSD Overview</a></span><ul><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH214-TPXREF102"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/BSD/BSD.html#//apple_ref/doc/uid/TP30000905-CH214-TPXREF102">BSD Facilities</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH214-TPXREF103"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/BSD/BSD.html#//apple_ref/doc/uid/TP30000905-CH214-TPXREF103">Differences between OS X and BSD</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH214-TPXREF104"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/BSD/BSD.html#//apple_ref/doc/uid/TP30000905-CH214-TPXREF104">For Further Reading</a></span></li></ul></li><li class="children " data-aref="//apple_ref/doc/uid/TP30000905-CH215-BABEEHFF" role="treeitem"><span class="disclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/Filesystem/Filesystem.html#//apple_ref/doc/uid/TP30000905-CH215-BABEEHFF">File Systems Overview</a></span><ul><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH215-BABIBDJI"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/Filesystem/Filesystem.html#//apple_ref/doc/uid/TP30000905-CH215-BABIBDJI">Working With the File System</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH215-TPXREF102"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/Filesystem/Filesystem.html#//apple_ref/doc/uid/TP30000905-CH215-TPXREF102">VFS Transition</a></span></li></ul></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH216-BABHCHFC"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/Networking/Networking.html#//apple_ref/doc/uid/TP30000905-CH216-BABHCHFC">Network Architecture</a></span></li><li class="children " data-aref="//apple_ref/doc/uid/TP30000905-CH217-BEHJDFCA" role="treeitem"><span class="disclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/boundaries/boundaries.html#//apple_ref/doc/uid/TP30000905-CH217-BEHJDFCA">Boundary Crossings</a></span><ul><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH217-TPXREF109"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/boundaries/boundaries.html#//apple_ref/doc/uid/TP30000905-CH217-TPXREF109">Security Considerations</a></span></li><li class="children " data-aref="//apple_ref/doc/uid/TP30000905-CH217-TPXREF110" role="treeitem"><span class="disclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/boundaries/boundaries.html#//apple_ref/doc/uid/TP30000905-CH217-TPXREF110">Choosing a Boundary Crossing Method</a></span><ul><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH217-TPXREF111"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/boundaries/boundaries.html#//apple_ref/doc/uid/TP30000905-CH217-TPXREF111">Kernel Subsystems</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH217-TPXREF112"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/boundaries/boundaries.html#//apple_ref/doc/uid/TP30000905-CH217-TPXREF112">Bandwidth and Latency</a></span></li></ul></li><li class="children " data-aref="//apple_ref/doc/uid/TP30000905-CH217-BABDECEG" role="treeitem"><span class="disclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/boundaries/boundaries.html#//apple_ref/doc/uid/TP30000905-CH217-BABDECEG">Mach Messaging and Mach Interprocess Communication (IPC)</a></span><ul><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH217-TPXREF108"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/boundaries/boundaries.html#//apple_ref/doc/uid/TP30000905-CH217-TPXREF108">Using Well-Defined Ports</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH217-TPXREF113"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/boundaries/boundaries.html#//apple_ref/doc/uid/TP30000905-CH217-TPXREF113">Remote Procedure Calls (RPC)</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH217-BABDAJGG"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/boundaries/boundaries.html#//apple_ref/doc/uid/TP30000905-CH217-BABDAJGG">Calling RPC From User Applications</a></span></li></ul></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH217-BABCEGBF"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/boundaries/boundaries.html#//apple_ref/doc/uid/TP30000905-CH217-BABCEGBF">BSD syscall API</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH217-BABGJBFJ"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/boundaries/boundaries.html#//apple_ref/doc/uid/TP30000905-CH217-BABGJBFJ">BSD ioctl  API</a></span></li><li class="children " data-aref="//apple_ref/doc/uid/TP30000905-CH217-BABJJBHG" role="treeitem"><span class="disclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/boundaries/boundaries.html#//apple_ref/doc/uid/TP30000905-CH217-BABJJBHG">BSD sysctl API</a></span><ul><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH217-TPXREF114"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/boundaries/boundaries.html#//apple_ref/doc/uid/TP30000905-CH217-TPXREF114">General Information on Adding a sysctl</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH217-TPXREF115"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/boundaries/boundaries.html#//apple_ref/doc/uid/TP30000905-CH217-TPXREF115">Adding a sysctl Procedure Call</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH217-TPXREF116"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/boundaries/boundaries.html#//apple_ref/doc/uid/TP30000905-CH217-TPXREF116">Registering a New Top Level  sysctl</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH217-TPXREF117"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/boundaries/boundaries.html#//apple_ref/doc/uid/TP30000905-CH217-TPXREF117">Adding a Simple  sysctl</a></span></li><li class="children " data-aref="//apple_ref/doc/uid/TP30000905-CH217-TPXREF118" role="treeitem"><span class="disclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/boundaries/boundaries.html#//apple_ref/doc/uid/TP30000905-CH217-TPXREF118">Calling a sysctl  From User Space</a></span><ul><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH217-TPXREF119"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/boundaries/boundaries.html#//apple_ref/doc/uid/TP30000905-CH217-TPXREF119">The sysctlbyname   System Call</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH217-TPXREF120"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/boundaries/boundaries.html#//apple_ref/doc/uid/TP30000905-CH217-TPXREF120">The sysctl  System Call</a></span></li></ul></li></ul></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH217-BABEDGJJ"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/boundaries/boundaries.html#//apple_ref/doc/uid/TP30000905-CH217-BABEDGJJ">Memory Mapping and Block Copying</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH217-TPXREF121"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/boundaries/boundaries.html#//apple_ref/doc/uid/TP30000905-CH217-TPXREF121">Summary</a></span></li></ul></li><li class="children " data-aref="//apple_ref/doc/uid/TP30000905-CH218-BEHJDFCA" role="treeitem"><span class="disclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/synchronization/synchronization.html#//apple_ref/doc/uid/TP30000905-CH218-BEHJDFCA">Synchronization Primitives</a></span><ul><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH218-TPXREF108"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/synchronization/synchronization.html#//apple_ref/doc/uid/TP30000905-CH218-TPXREF108">Semaphores</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH218-TPXREF109"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/synchronization/synchronization.html#//apple_ref/doc/uid/TP30000905-CH218-TPXREF109">Condition Variables</a></span></li><li class="children " data-aref="//apple_ref/doc/uid/TP30000905-CH218-TPXREF110" role="treeitem"><span class="disclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/synchronization/synchronization.html#//apple_ref/doc/uid/TP30000905-CH218-TPXREF110">Locks</a></span><ul><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH218-TPXREF111"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/synchronization/synchronization.html#//apple_ref/doc/uid/TP30000905-CH218-TPXREF111">Spinlocks</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH218-TPXREF112"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/synchronization/synchronization.html#//apple_ref/doc/uid/TP30000905-CH218-TPXREF112">Mutexes</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH218-CJHFIAEH"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/synchronization/synchronization.html#//apple_ref/doc/uid/TP30000905-CH218-CJHFIAEH">Read-Write Locks</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH218-CJHDBCAD"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/synchronization/synchronization.html#//apple_ref/doc/uid/TP30000905-CH218-CJHDBCAD">Spin/Sleep Locks</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH218-BABCHEIA"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/synchronization/synchronization.html#//apple_ref/doc/uid/TP30000905-CH218-BABCHEIA">Using Lock Functions</a></span></li></ul></li></ul></li><li class="children " data-aref="//apple_ref/doc/uid/TP30000905-CH219-BEHJDFCA" role="treeitem"><span class="disclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/services/services.html#//apple_ref/doc/uid/TP30000905-CH219-BEHJDFCA">Miscellaneous Kernel Services</a></span><ul><li class="children " data-aref="//apple_ref/doc/uid/TP30000905-CH219-CHDJBFEF" role="treeitem"><span class="disclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/services/services.html#//apple_ref/doc/uid/TP30000905-CH219-CHDJBFEF">Using Kernel Time Abstractions</a></span><ul><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH219-TPXREF108"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/services/services.html#//apple_ref/doc/uid/TP30000905-CH219-TPXREF108">Obtaining Time Information</a></span></li><li class="children " data-aref="//apple_ref/doc/uid/TP30000905-CH219-TPXREF109" role="treeitem"><span class="disclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/services/services.html#//apple_ref/doc/uid/TP30000905-CH219-TPXREF109">Event and Timer Waits</a></span><ul><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH219-TPXREF110"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/services/services.html#//apple_ref/doc/uid/TP30000905-CH219-TPXREF110">Using IODelay and  IOSleep</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH219-CHDGFEFE"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/services/services.html#//apple_ref/doc/uid/TP30000905-CH219-CHDGFEFE">Using Mach Absolute Time Functions</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH219-CHDFIGGH"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/services/services.html#//apple_ref/doc/uid/TP30000905-CH219-CHDFIGGH">Using msleep</a></span></li></ul></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH219-SW2"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/services/services.html#//apple_ref/doc/uid/TP30000905-CH219-SW2">Handling Version Dependencies</a></span></li></ul></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH219-CHDCEBBJ"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/services/services.html#//apple_ref/doc/uid/TP30000905-CH219-CHDCEBBJ">Boot Option Handling</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH219-CHDJHGEF"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/services/services.html#//apple_ref/doc/uid/TP30000905-CH219-CHDJHGEF">Queues</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH219-CHDIDIDF"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/services/services.html#//apple_ref/doc/uid/TP30000905-CH219-CHDIDIDF">Installing Shutdown Hooks</a></span></li></ul></li><li class="children " data-aref="//apple_ref/doc/uid/TP30000905-CH220-BEBDGFHI" role="treeitem"><span class="disclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/Extend/Extend.html#//apple_ref/doc/uid/TP30000905-CH220-BEBDGFHI">Kernel Extension Overview</a></span><ul><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH220-TPXREF101"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/Extend/Extend.html#//apple_ref/doc/uid/TP30000905-CH220-TPXREF101">Implementation of a Kernel Extension (KEXT)</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH220-BEBBFDGA"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/Extend/Extend.html#//apple_ref/doc/uid/TP30000905-CH220-BEBBFDGA">Kernel Extension Dependencies</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH220-TPXREF102"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/Extend/Extend.html#//apple_ref/doc/uid/TP30000905-CH220-TPXREF102">Building and Testing Your Extension</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH220-BEBGICBH"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/Extend/Extend.html#//apple_ref/doc/uid/TP30000905-CH220-BEBGICBH">Debugging Your KEXT</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH220-BEBEGICJ"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/Extend/Extend.html#//apple_ref/doc/uid/TP30000905-CH220-BEBEGICJ">Installed KEXTs</a></span></li></ul></li><li class="children " data-aref="//apple_ref/doc/uid/TP30000905-CH221-BEHJDFCA" role="treeitem"><span class="disclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/build/build.html#//apple_ref/doc/uid/TP30000905-CH221-BEHJDFCA">Building and Debugging Kernels</a></span><ul><li class="children " data-aref="//apple_ref/doc/uid/TP30000905-CH221-CIHFDDJB" role="treeitem"><span class="disclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/build/build.html#//apple_ref/doc/uid/TP30000905-CH221-CIHFDDJB">Adding New Files or Modules</a></span><ul><li class="children " data-aref="//apple_ref/doc/uid/TP30000905-CH221-TPXREF108" role="treeitem"><span class="disclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/build/build.html#//apple_ref/doc/uid/TP30000905-CH221-TPXREF108">Modifying the Configuration Files</a></span><ul><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH221-TPXREF109"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/build/build.html#//apple_ref/doc/uid/TP30000905-CH221-TPXREF109">Adding the Files or Modules</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH221-CIHEHBHB"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/build/build.html#//apple_ref/doc/uid/TP30000905-CH221-CIHEHBHB">Enabling Module Options</a></span></li></ul></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH221-BABFDFJE"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/build/build.html#//apple_ref/doc/uid/TP30000905-CH221-BABFDFJE">Modifying the Source Code Files</a></span></li></ul></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH221-CIHFEIFI"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/build/build.html#//apple_ref/doc/uid/TP30000905-CH221-CIHFEIFI">Building Your First Kernel</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH221-TPXREF110"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/build/build.html#//apple_ref/doc/uid/TP30000905-CH221-TPXREF110">Building an Alternate Kernel Configuration</a></span></li><li class="children " data-aref="//apple_ref/doc/uid/TP30000905-CH221-CIHBJCGC" role="treeitem"><span class="disclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/build/build.html#//apple_ref/doc/uid/TP30000905-CH221-CIHBJCGC">When Things Go Wrong: Debugging the Kernel</a></span><ul><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH221-CIHIAFFJ"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/build/build.html#//apple_ref/doc/uid/TP30000905-CH221-CIHIAFFJ">Setting Debug Flags in Open Firmware</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH221-SW2"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/build/build.html#//apple_ref/doc/uid/TP30000905-CH221-SW2">Avoiding Watchdog Timer Problems</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH221-TPXREF111"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/build/build.html#//apple_ref/doc/uid/TP30000905-CH221-TPXREF111">Choosing a Debugger</a></span></li><li class="children " data-aref="//apple_ref/doc/uid/TP30000905-CH221-CIHEIAID" role="treeitem"><span class="disclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/build/build.html#//apple_ref/doc/uid/TP30000905-CH221-CIHEIAID">Using   gdb for Kernel Debugging</a></span><ul><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH221-TPXREF113"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/build/build.html#//apple_ref/doc/uid/TP30000905-CH221-TPXREF113">Special gdb I/O Addressing Issues</a></span></li></ul></li><li class="children " data-aref="//apple_ref/doc/uid/TP30000905-CH221-CIHDEDFH" role="treeitem"><span class="disclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/build/build.html#//apple_ref/doc/uid/TP30000905-CH221-CIHDEDFH">Using   ddb for Kernel Debugging</a></span><ul><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH221-TPXREF112"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/build/build.html#//apple_ref/doc/uid/TP30000905-CH221-TPXREF112">Commands and Syntax of ddb</a></span></li></ul></li></ul></li></ul></li><li class="children " data-aref="//apple_ref/doc/uid/TP30000905-CH223-TPXREF101" role="treeitem"><span class="disclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/Bibliography/Bibliography.html#//apple_ref/doc/uid/TP30000905-CH223-TPXREF101">Bibliography</a></span><ul><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH223-TPXREF103"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/Bibliography/Bibliography.html#//apple_ref/doc/uid/TP30000905-CH223-TPXREF103">Apple OS X Publications</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH223-TPXREF104"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/Bibliography/Bibliography.html#//apple_ref/doc/uid/TP30000905-CH223-TPXREF104">General UNIX and Open Source Resources</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH223-TPXREF1"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/Bibliography/Bibliography.html#//apple_ref/doc/uid/TP30000905-CH223-TPXREF1">BSD and UNIX Internals</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH223-TPXREF2"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/Bibliography/Bibliography.html#//apple_ref/doc/uid/TP30000905-CH223-TPXREF2">Mach</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH223-TPXREF3"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/Bibliography/Bibliography.html#//apple_ref/doc/uid/TP30000905-CH223-TPXREF3">Networking</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH223-TPXREF4"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/Bibliography/Bibliography.html#//apple_ref/doc/uid/TP30000905-CH223-TPXREF4">Operating Systems</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH223-TPXREF5"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/Bibliography/Bibliography.html#//apple_ref/doc/uid/TP30000905-CH223-TPXREF5">POSIX</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH223-TPXREF6"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/Bibliography/Bibliography.html#//apple_ref/doc/uid/TP30000905-CH223-TPXREF6">Programming</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH223-TPXREF7"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/Bibliography/Bibliography.html#//apple_ref/doc/uid/TP30000905-CH223-TPXREF7">Websites and Online Resources</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH223-TPXREF113"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/Bibliography/Bibliography.html#//apple_ref/doc/uid/TP30000905-CH223-TPXREF113">Security and Cryptography</a></span></li></ul></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH222-BEBDGFHI"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/history/history.html#//apple_ref/doc/uid/TP30000905-CH222-BEBDGFHI">Revision History</a></span></li><li class=" " data-aref="//apple_ref/doc/uid/TP30000905-CH224-TPXREF1"><span class="nodisclosure"></span><span class="sectionName"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/Glossary/Glossary.html#//apple_ref/doc/uid/TP30000905-CH224-TPXREF1">Glossary</a></span></li></ul>
    </nav>

    <article id="contents" tabindex="0" role="main" class="isShowingTOC">
        <div id="pageNavigationLinks_top" class="pageNavigationLinks">
            <a class="nextLink" rel="next" href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/contexts/contexts.html" onclick="s_objectID=&quot;https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/con_1&quot;;return this.s_oc?this.s_oc(e):true">Next</a><a class="previousLink" rel="prev" href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/vm/vm.html" onclick="s_objectID=&quot;https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/vm/_1&quot;;return this.s_oc?this.s_oc(e):true">Previous</a>
        </div>
        <a id="top" name="top"></a>
        <a id="INDEX" href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/index.html" style="display:none;" onclick="s_objectID=&quot;https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/ind_1&quot;;return this.s_oc?this.s_oc(e):true"></a>
        
        <a name="//apple_ref/doc/uid/TP30000905-CH211-BEHJDFCA" title="Mach Scheduling and Thread Interfaces"></a><h1 id="pageTitle">Mach Scheduling and Thread Interfaces</h1><p>OS X is based on Mach and BSD. Like Mach and most BSD UNIX systems, it contains an advanced scheduler based on the CMU Mach 3<a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_488"></a> scheduler. This chapter describes the scheduler from the perspective of both a kernel programmer and an application developer attempting to set scheduling parameters.</p>
<p>This chapter begins with the <span class="content_text"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/scheduler/scheduler.html#//apple_ref/doc/uid/TP30000905-CH211-BABFGDHA" data-renderer-version="1" onclick="s_objectID=&quot;https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/sch_1&quot;;return this.s_oc?this.s_oc(e):true">Overview of Scheduling</a></span>, which describes the basic concepts behind Mach scheduling at a high level, including real-time priority support.</p>
<p>The second section, <span class="content_text"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/scheduler/scheduler.html#//apple_ref/doc/uid/TP30000905-CH211-BABCHEEB" data-renderer-version="1" onclick="s_objectID=&quot;https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/sch_2&quot;;return this.s_oc?this.s_oc(e):true">Using Mach Scheduling From User Applications</a></span>, describes how to access certain key Mach scheduler routines from user applications and from other parts of the kernel outside the scheduler.</p>
<p>The third section, <span class="content_text"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/scheduler/scheduler.html#//apple_ref/doc/uid/TP30000905-CH211-BABBEEBI" data-renderer-version="1" onclick="s_objectID=&quot;https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/sch_3&quot;;return this.s_oc?this.s_oc(e):true">Kernel Thread APIs</a></span>, explains scheduler-related topics including how to create and terminate kernel threads and describes the BSD <code><!--a-->spl<!--/a--></code> macros and their limited usefulness in OS X.</p>

<section><a name="//apple_ref/doc/uid/TP30000905-CH211-BABFGDHA" title="Overview of Scheduling"></a><h2 class="jump">Overview of Scheduling</h2>
<p>The OS X scheduler is derived from the scheduler used in OSFMK<a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_489"></a> 7.3. In general, much documentation about prior implementations applies to the scheduler in OS X, although you will find numerous differences. The details of those differences are beyond the scope of this overview.</p>
<p>Mach scheduling is based on a system of run queues at various priorities that are handled in different ways. The priority levels are divided into four bands according to their characteristics, as described in <span class="content_text"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/scheduler/scheduler.html#//apple_ref/doc/uid/TP30000905-CH211-TPXREF114" data-renderer-version="1" onclick="s_objectID=&quot;https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/sch_4&quot;;return this.s_oc?this.s_oc(e):true">Table 10-1</a></span>.</p><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_490"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_491"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-TPXREF114" title="Table 10-1Thread priority bands"></a><div class="tableholder"><table class="graybox" border="0" cellspacing="0" cellpadding="5">
<caption class="tablecaption"><strong class="caption_number">Table 10-1</strong>&nbsp;&nbsp;Thread priority bands</caption>

<tbody><tr>
<th scope="col" class="TableHeading_TableRow_TableCell"><p>Priority Band</p></th>
<th scope="col" class="TableHeading_TableRow_TableCell"><p>Characteristics</p></th>
</tr>


<tr>
<td scope="row"><p>Normal</p></td>
<td><p>normal application thread priorities</p></td>
</tr>
<tr>
<td scope="row"><p>System high priority</p></td>
<td><p>threads whose priority has been raised above normal threads</p></td>
</tr>
<tr>
<td scope="row"><p>Kernel mode only</p></td>
<td><p>reserved for threads created inside the kernel that need to run at a higher priority than all user space threads (I/O Kit workloops, for example)</p></td>
</tr>
<tr>
<td scope="row"><p>Real-time threads</p></td>
<td><p>threads whose priority is based on getting a well-defined fraction of total clock cycles, regardless of other activity (in an audio player application, for example).</p></td>
</tr>

</tbody></table></div>
<p>Threads can migrate between priority levels for a number of reasons, largely as an artifact of the time sharing algorithm used. However, this migration is within a given band.</p>
<p>Threads marked as being real-time priority<a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_492"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_493"></a> are also special in the eyes of the scheduler. A real-time thread tells the scheduler that it needs to run for <code>A</code> cycles out of the next <code>B</code> cycles. For example, it might need to run for 3000 out of the next 7000 clock cycles in order to keep up. It also tells the scheduler whether those cycles must be contiguous. Using long contiguous quanta is generally frowned upon but is occasionally necessary for specialized real-time applications.</p><p>The kernel will make every effort to honor the request, but since this is soft real-time, it cannot be guaranteed. In particular, if the real-time thread requests something relatively reasonable, its priority will remain in the real-time band, but if it lies blatantly about its requirements and behaves in a compute-bound fashion, it may be demoted to the priority of a normal thread.</p>
<p>Changing a threadâ€™s priority to turn it into a real-time priority thread using Mach calls is described in more detail in <span class="content_text"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/scheduler/scheduler.html#//apple_ref/doc/uid/TP30000905-CH211-BABCHEEB" data-renderer-version="1" onclick="s_objectID=&quot;https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/sch_5&quot;;return this.s_oc?this.s_oc(e):true">Using Mach Scheduling From User Applications</a></span>.</p>
<p>In addition to the raw Mach RPC interfaces, some aspects of a threadâ€™s priority can be controlled from user space using the POSIX thread priority API. The POSIX thread API is able to set thread priority only within the lowest priority band (0â€“63). For more information on the POSIX thread priority API, see <span class="content_text"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/scheduler/scheduler.html#//apple_ref/doc/uid/TP30000905-CH211-TPXREF109" data-renderer-version="1" onclick="s_objectID=&quot;https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/sch_6&quot;;return this.s_oc?this.s_oc(e):true">Using the pthreads API to Influence Scheduling</a></span>.</p></section>
<section><a name="//apple_ref/doc/uid/TP30000905-CH211-TPXREF108" title="Why Did My Thread Priority Change?"></a><h2 class="jump">Why Did My Thread Priority Change?</h2>
<p>There are many reasons that a threadâ€™s priority can change. This section attempts to explain the root cause of these thread priority changes.</p>
<p>A real-time thread, as mentioned previously, is penalized (and may even be knocked down to normal thread priority) if it exceeds its time quantum<a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_494"></a> without blocking repeatedly. For this reason, it is very important to make a reasonable guess about your threadâ€™s workload if it needs to run in the real-time band.</p>
<p>Threads that are heavily compute-bound are given lower priority to help minimize response time for interactive tasks so that highâ€“priority computeâ€“bound threads cannot monopolize the system and prevent lowerâ€“priority I/O-bound threads from running. Even at a lower priority, the computeâ€“bound threads still run frequently, since the higherâ€“priority I/O-bound threads do only a short amount of processing, block on I/O again, then allow the compute-bound threads to execute.</p>
<p>All of these mechanisms are operating continually in the Mach scheduler. This means that threads are frequently moving up or down in priority based upon their behavior and the behavior of other threads in the system.</p></section>
<section><a name="//apple_ref/doc/uid/TP30000905-CH211-BABCHEEB" title="Using Mach Scheduling From User Applications"></a><h2 class="jump">Using Mach Scheduling From User Applications</h2>
<p>There are three basic ways to change how a user thread is scheduled. You can use the BSD <code>pthreads</code><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_495"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_496"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_497"></a> API to change basic policy and importance. You can also use Mach RPC calls to change a taskâ€™s importance. Finally, you can use RPC calls to change the scheduling policy to move a thread into a different scheduling band. This is commonly used when interacting with CoreAudio.</p>
<p>The <code>pthreads</code> API is a user space API, and has limited relevance for kernel programmers. The Mach thread and task APIs are more general and can be used from anywhere in the kernel. The Mach thread and task calls can also be called from user applications.</p>
<section><a name="//apple_ref/doc/uid/TP30000905-CH211-TPXREF109" title="Using the pthreads API to Influence Scheduling"></a><h3 class="jump">Using the <code>pthreads</code> API to Influence Scheduling</h3>
<p>OS X supports a number of policies at the POSIX threads API level. If you need real-time behavior, you must use the Mach <code><!--a-->thread_policy_set<!--/a--></code><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_498"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_499"></a> call. This is described in <span class="content_text"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/scheduler/scheduler.html#//apple_ref/doc/uid/TP30000905-CH211-BABHGEFA" data-renderer-version="1" onclick="s_objectID=&quot;https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/sch_7&quot;;return this.s_oc?this.s_oc(e):true">Using the Mach Thread API to Influence Scheduling</a></span>.</p>
<p>The <code>pthreads</code> API adjusts the priority of threads within a given task. It does not necessarily impact performance relative to threads in other tasks. To increase the priority of a task, you can use <a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_500"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_501"></a><code><!--a target="_self" -->nice<!--/a--></code> or <a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_502"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_503"></a><code><!--a target="_self" -->renice<!--/a--></code> from the command line or call <code><!--a target="_self" -->getpriority<!--/a--></code><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_504"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_505"></a> and <a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_506"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_507"></a><code><!--a target="_self" -->setpriority<!--/a--></code> from your application.</p>
<p>The API provides two functions: <a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_508"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_509"></a><code><a href="https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man3/pthread_getschedparam.3.html#//apple_ref/doc/man/3/pthread_getschedparam" data-renderer-version="1" target="_self" onclick="s_objectID=&quot;https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man_1&quot;;return this.s_oc?this.s_oc(e):true">pthread_getschedparam</a></code> and <a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_510"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_511"></a><code><a href="https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man3/pthread_setschedparam.3.html#//apple_ref/doc/man/3/pthread_setschedparam" data-renderer-version="1" target="_self" onclick="s_objectID=&quot;https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man_2&quot;;return this.s_oc?this.s_oc(e):true">pthread_setschedparam</a></code>. Their prototypes look like this:</p>

<div class="codesample clear"><table><tbody><tr><td scope="row"><pre>pthread_setschedparam(pthread_t thread, int policy,<span></span></pre></td></tr><tr><td scope="row"><pre>        struct sched_param *param);<span></span></pre></td></tr><tr><td scope="row"><pre>pthread_getschedparam(pthread_t thread, int *policy,<span></span></pre></td></tr><tr><td scope="row"><pre>        struct sched_param *param)<span></span></pre></td></tr></tbody></table></div>
<p>The arguments for <code><a href="https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man3/pthread_getschedparam.3.html#//apple_ref/doc/man/3/pthread_getschedparam" data-renderer-version="1" target="_self" onclick="s_objectID=&quot;https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man_3&quot;;return this.s_oc?this.s_oc(e):true">pthread_getschedparam</a></code> are straightforward. The first argument is a thread ID, and the others are pointers to memory where the results will be stored.</p>
<p>The arguments to <code><a href="https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man3/pthread_setschedparam.3.html#//apple_ref/doc/man/3/pthread_setschedparam" data-renderer-version="1" target="_self" onclick="s_objectID=&quot;https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man_4&quot;;return this.s_oc?this.s_oc(e):true">pthread_setschedparam</a></code> are not as obvious, however. As with <code><a href="https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man3/pthread_getschedparam.3.html#//apple_ref/doc/man/3/pthread_getschedparam" data-renderer-version="1" target="_self" onclick="s_objectID=&quot;https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man_5&quot;;return this.s_oc?this.s_oc(e):true">pthread_getschedparam</a></code>, the first argument is a thread ID.</p>
<p>The second argument to <code><a href="https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man3/pthread_setschedparam.3.html#//apple_ref/doc/man/3/pthread_setschedparam" data-renderer-version="1" target="_self" onclick="s_objectID=&quot;https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man_6&quot;;return this.s_oc?this.s_oc(e):true">pthread_setschedparam</a></code> is the desired policy, which can currently be one of <code>SCHED_FIFO</code><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_512"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_513"></a> (first in, first out), <code>SCHED_RR</code><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_514"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_515"></a> (round-robin), or <code>SCHED_OTHER</code><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_516"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_517"></a>. The <code>SCHED_OTHER</code> policy is generally used for extra policies that are specific to a given operating system, and should thus be avoided when writing portable code.</p>
<p>The third argument is a structure that contains various scheduling parameters.</p>
<p>Here is a basic example of using <code>pthreads</code> functions to set a threadâ€™s scheduling policy and priority.</p>

<div class="codesample clear"><table><tbody><tr><td scope="row"><pre>int set_my_thread_priority(int priority) {<span></span></pre></td></tr><tr><td scope="row"><pre>    struct sched_param sp;<span></span></pre></td></tr><tr><td scope="row"><pre> <span></span></pre></td></tr><tr><td scope="row"><pre>    memset(&amp;sp, 0, sizeof(struct sched_param));<span></span></pre></td></tr><tr><td scope="row"><pre>    sp.sched_priority=priority;<span></span></pre></td></tr><tr><td scope="row"><pre>    if (pthread_setschedparam(pthread_self(), SCHED_RR, &amp;sp)  == -1) {<span></span></pre></td></tr><tr><td scope="row"><pre>        printf("Failed to change priority.\n");<span></span></pre></td></tr><tr><td scope="row"><pre>        return -1;<span></span></pre></td></tr><tr><td scope="row"><pre>    }<span></span></pre></td></tr><tr><td scope="row"><pre>    return 0;<span></span></pre></td></tr><tr><td scope="row"><pre>}<span></span></pre></td></tr></tbody></table></div>
<p><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_518"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_519"></a>This code snippet sets the scheduling policy for the current thread to round-robin scheduling, and sets the threadâ€™s relative importance within the task to the value passed in through the <code>priority</code> argument.</p><p>For more information, see the manual page for <code><a href="https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man3/pthread.3.html#//apple_ref/doc/man/3/pthread" data-renderer-version="1" target="_self" onclick="s_objectID=&quot;https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man_7&quot;;return this.s_oc?this.s_oc(e):true">pthread</a></code>.</p></section>
<section><a name="//apple_ref/doc/uid/TP30000905-CH211-BABHGEFA" title="Using the Mach Thread API to Influence Scheduling"></a><h3 class="jump">Using the Mach Thread API to Influence Scheduling</h3>
<p>This API is frequently used in multimedia applications to obtain real-time priority. It is also useful in other situations when the <code><a href="https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man3/pthread.3.html#//apple_ref/doc/man/3/pthread" data-renderer-version="1" target="_self" onclick="s_objectID=&quot;https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man_8&quot;;return this.s_oc?this.s_oc(e):true">pthread</a></code> scheduling API cannot be used or does not provide the needed functionality.</p>
<p>The API consists of two functions, <code><!--a-->thread_policy_set<!--/a--></code> and <code><!--a-->thread_policy_get<!--/a--></code>.</p>

<div class="codesample clear"><table><tbody><tr><td scope="row"><pre>kern_return_t thread_policy_set(<span></span></pre></td></tr><tr><td scope="row"><pre>                thread_act_t thread,<span></span></pre></td></tr><tr><td scope="row"><pre>                thread_policy_flavor_t flavor,<span></span></pre></td></tr><tr><td scope="row"><pre>                thread_policy_t policy_info,<span></span></pre></td></tr><tr><td scope="row"><pre>                mach_msg_type_number_t count);<span></span></pre></td></tr><tr><td scope="row"><pre> <span></span></pre></td></tr><tr><td scope="row"><pre>kern_return_t thread_policy_get(<span></span></pre></td></tr><tr><td scope="row"><pre>                thread_act_t thread,<span></span></pre></td></tr><tr><td scope="row"><pre>                thread_policy_flavor_t flavor,<span></span></pre></td></tr><tr><td scope="row"><pre>                thread_policy_t policy_info,<span></span></pre></td></tr><tr><td scope="row"><pre>                mach_msg_type_number_t *count,<span></span></pre></td></tr><tr><td scope="row"><pre>                boolean_t *get_default);<span></span></pre></td></tr></tbody></table></div>
<p><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_520"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_521"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_522"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_523"></a>The parameters of these functions are roughly the same, except that the <code><!--a-->thread_policy_get<!--/a--></code> function takes pointers for the <code>count</code> and the <code>get_default</code> arguments. The count is an <code>inout</code> parameter, meaning that it is interpreted as the maximum amount of storage (in units of <code>int32_t</code>) that the calling task has allocated for the return, but it is also overwritten by the scheduler to indicate the amount of data that was actually returned.</p>
<p>These functions get and set several parameters, according to the thread policy chosen. The possible thread policies are listed in <span class="content_text"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/scheduler/scheduler.html#//apple_ref/doc/uid/TP30000905-CH211-BABBEJDH" data-renderer-version="1" onclick="s_objectID=&quot;https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/sch_8&quot;;return this.s_oc?this.s_oc(e):true">Table 10-2</a></span>.</p>
<a name="//apple_ref/doc/uid/TP30000905-CH211-BABBEJDH" title="Table 10-2Thread policies"></a><div class="tableholder"><table class="graybox" border="0" cellspacing="0" cellpadding="5">
<caption class="tablecaption"><strong class="caption_number">Table 10-2</strong>&nbsp;&nbsp;Thread policies</caption>

<tbody><tr>
<th scope="col" class="TableHeading_TableRow_TableCell"><p>Policy</p></th>
<th scope="col" class="TableHeading_TableRow_TableCell"><p>Meaning</p></th>
</tr>


<tr>
<td scope="row"><p><code>THREAD_STANDARD_POLICY</code><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_524"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_525"></a></p></td>
<td><p>Default value</p></td>
</tr>
<tr>
<td scope="row"><p><code>THREAD_TIME_CONSTRAINT_POLICY</code><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_526"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_527"></a></p></td>
<td><p>Used to specify real-time behavior.</p></td>
</tr>
<tr>
<td scope="row"><p><code>THREAD_PRECEDENCE_POLICY</code><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_528"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_529"></a></p></td>
<td><p>Used to indicate the importance of computation relative to other threads in a given task.</p></td>
</tr>

</tbody></table></div>
<p>The following code snippet shows how to set the priority of a task to tell the scheduler that it needs real-time<a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_530"></a> performance. The example values provided in comments are based on the estimated needs of <code>esd</code> (the Esound daemon).<a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_531"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_532"></a></p>

<div class="codesample clear"><table><tbody><tr><td scope="row"><pre>#include &lt;mach/mach_init.h&gt;<span></span></pre></td></tr><tr><td scope="row"><pre>#include &lt;mach/thread_policy.h&gt;<span></span></pre></td></tr><tr><td scope="row"><pre>#include &lt;mach/sched.h&gt;<span></span></pre></td></tr><tr><td scope="row"><pre>#include &lt;pthread.h&gt;<span></span></pre></td></tr><tr><td scope="row"><pre> <span></span></pre></td></tr><tr><td scope="row"><pre>int set_realtime(int period, int computation, int constraint) {<span></span></pre></td></tr><tr><td scope="row"><pre>    struct thread_time_constraint_policy ttcpolicy;<span></span></pre></td></tr><tr><td scope="row"><pre>    int ret;<span></span></pre></td></tr><tr><td scope="row"><pre>    thread_port_t threadport = pthread_mach_thread_np(pthread_self());<span></span></pre></td></tr><tr><td scope="row"><pre> <span></span></pre></td></tr><tr><td scope="row"><pre>    ttcpolicy.period=period; // HZ/160<span></span></pre></td></tr><tr><td scope="row"><pre>    ttcpolicy.computation=computation; // HZ/3300;<span></span></pre></td></tr><tr><td scope="row"><pre>    ttcpolicy.constraint=constraint; // HZ/2200;<span></span></pre></td></tr><tr><td scope="row"><pre>    ttcpolicy.preemptible=1;<span></span></pre></td></tr><tr><td scope="row"><pre> <span></span></pre></td></tr><tr><td scope="row"><pre>    if ((ret=thread_policy_set(threadport,<span></span></pre></td></tr><tr><td scope="row"><pre>        THREAD_TIME_CONSTRAINT_POLICY, (thread_policy_t)&amp;ttcpolicy,<span></span></pre></td></tr><tr><td scope="row"><pre>        THREAD_TIME_CONSTRAINT_POLICY_COUNT)) != KERN_SUCCESS) {<span></span></pre></td></tr><tr><td scope="row"><pre>            fprintf(stderr, "set_realtime() failed.\n");<span></span></pre></td></tr><tr><td scope="row"><pre>            return 0;<span></span></pre></td></tr><tr><td scope="row"><pre>    }<span></span></pre></td></tr><tr><td scope="row"><pre>    return 1;<span></span></pre></td></tr><tr><td scope="row"><pre>}<span></span></pre></td></tr></tbody></table></div>
<p>The time values are in terms of Mach absolute time units. Since these values differ on different CPUs, you should generally use numbers relative to HZ (a global variable in the kernel that contains the current number of ticks per second). You can either handle this conversion yourself by dividing this value by an appropriate quantity or use the conversion routines described in <span class="content_text"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/services/services.html#//apple_ref/doc/uid/TP30000905-CH219-CHDJBFEF" data-renderer-version="1" onclick="s_objectID=&quot;https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/ser_1&quot;;return this.s_oc?this.s_oc(e):true">Using Kernel Time Abstractions </a></span>.</p>
<p>Say your computer reports 133 million for the value of HZ. If you pass the example values given as arguments to this function, your thread tells the scheduler that it needs approximately 40,000 (HZ/3300) out of the next 833,333 (HZ/160) bus cycles. The <code>preemptible</code> value (1) indicates that those 40,000 bus cycles need not be contiguous. However, the <code>constraint</code> value (HZ/2200) tells the scheduler that there can be no more than 60,000 bus cycles between the start of computation and the end of computation.</p>
<div class="notebox"><aside><a name="//apple_ref/doc/uid/TP30000905-CH211-SW1" title="Note"></a><p><strong>Note:</strong>&nbsp;Because the constraint sets a maximum bound for computation, it must be larger than the value for computation.</p><p></p></aside></div>
<p>A straightforward example using this API is code that displays video directly to the framebuffer hardware. It needs to run for a certain number of cycles every frame to get the new data into the frame buffer. It can be interrupted without worry, but if it is interrupted for too long, the video hardware starts displaying an outdated frame before the software writes the updated data, resulting in a nasty glitch. Audio has similar behavior, but since it is usually buffered along the way (in hardware and in software), there is greater tolerance for variations in timing, to a point.</p>
<p>Another policy call is <code>THREAD_PRECEDENCE_POLICY</code><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_533"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_534"></a>. This is used for setting the relative importance of non-real-time threads. Its calling convention is similar, except that its structure is <code>thread_precedence_policy</code>, and contains only one field, an <code>integer_t</code> called <code>importance</code>. While this is a signed 32-bit value, the minimum legal value is zero (<code>IDLE_PRI</code>). threads set to <code>IDLE_PRI</code> will only execute when no other thread is scheduled to execute.</p>
<p>In general, larger values indicate higher priority. The maximum limit is subject to change, as are the priority bands, some of which have special purposes (such as real-time threads). Thus, in general, you should use pthreads APIs to achieve this functionality rather than using this policy directly unless you are setting up an idle thread.</p></section>
<section><a name="//apple_ref/doc/uid/TP30000905-CH211-TPXREF110" title="Using the Mach Task API to Influence Scheduling"></a><h3 class="jump">Using the Mach Task API to Influence Scheduling</h3>
<p>This relatively simple API is not particularly useful for most developers. However, it may be beneficial if you are developing a graphical user interface for Darwin. It also provides some insight into the prioritization of tasks in OS X. It is presented here for completeness.</p>
<p>The API consists of two functions, <code><!--a-->task_policy_set<!--/a--></code> and <code><!--a-->task_policy_get<!--/a--></code>.<a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_535"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_536"></a></p>

<div class="codesample clear"><table><tbody><tr><td scope="row"><pre>kern_return_t task_policy_set(<span></span></pre></td></tr><tr><td scope="row"><pre>                task_t task,<span></span></pre></td></tr><tr><td scope="row"><pre>                task_policy_flavor_t flavor,<span></span></pre></td></tr><tr><td scope="row"><pre>                task_policy_t policy_info,<span></span></pre></td></tr><tr><td scope="row"><pre>                mach_msg_type_number_t count);<span></span></pre></td></tr><tr><td scope="row"><pre> <span></span></pre></td></tr><tr><td scope="row"><pre>kern_return_t task_policy_get(<span></span></pre></td></tr><tr><td scope="row"><pre>                task_t task,<span></span></pre></td></tr><tr><td scope="row"><pre>                task_policy_flavor_t flavor,<span></span></pre></td></tr><tr><td scope="row"><pre>                task_policy_t policy_info,<span></span></pre></td></tr><tr><td scope="row"><pre>                mach_msg_type_number_t *count,<span></span></pre></td></tr><tr><td scope="row"><pre>                boolean_t *get_default);<span></span></pre></td></tr></tbody></table></div>
<p><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_537"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_538"></a>As with <a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_539"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_540"></a><code><!--a-->thread_policy_set<!--/a--></code> and <a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_541"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_542"></a><code><!--a-->thread_policy_get<!--/a--></code>, the parameters are similar, except that the <code><!--a-->task_policy_get<!--/a--></code> function takes pointers for the <code>count</code> and the <code>get_default</code> arguments. The <code>count</code> argument is an <code>inout</code><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_543"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_544"></a> parameter. It is interpreted as the maximum amount of storage that the calling task has allocated for the return, but it is also overwritten by the scheduler to indicate the amount of data that was actually returned.</p>
<p>These functions get and set a single parameter, that of the role of a given task, which changes the way the taskâ€™s priority gets altered over time. The possible roles of a task are listed in <span class="content_text"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/scheduler/scheduler.html#//apple_ref/doc/uid/TP30000905-CH211-BABCFADD" data-renderer-version="1" onclick="s_objectID=&quot;https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/sch_9&quot;;return this.s_oc?this.s_oc(e):true">Table 10-3</a></span>.</p>
<a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_545"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-BABCFADD" title="Table 10-3Task roles"></a><div class="tableholder"><table class="graybox" border="0" cellspacing="0" cellpadding="5">
<caption class="tablecaption"><strong class="caption_number">Table 10-3</strong>&nbsp;&nbsp;Task roles</caption>

<tbody><tr>
<th scope="col" class="TableHeading_TableRow_TableCell"><p>Role</p></th>
<th scope="col" class="TableHeading_TableRow_TableCell"><p>Meaning</p></th>
</tr>


<tr>
<td scope="row"><p><code>TASK_UNSPECIFIED</code><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_546"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_547"></a></p></td>
<td><p>Default value</p></td>
</tr>
<tr>
<td scope="row"><p><code>TASK_RENICED</code><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_548"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_549"></a></p></td>
<td><p>This is set when a process is executed with <code>nice</code> or is modified by <code>renice</code>.</p></td>
</tr>
<tr>
<td scope="row"><p><code>TASK_FOREGROUND_APPLICATION</code><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_550"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_551"></a></p></td>
<td><p>GUI application in the foreground. There can be more than one foreground application.</p></td>
</tr>
<tr>
<td scope="row"><p><code>TASK_BACKGROUND_APPLICATION<a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_552"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_553"></a></code></p></td>
<td><p>GUI application in the background.</p></td>
</tr>
<tr>
<td scope="row"><p><code>TASK_CONTROL_APPLICATION</code><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_554"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_555"></a></p></td>
<td><p>Reserved for the dock or equivalent (assigned FCFS).</p></td>
</tr>
<tr>
<td scope="row"><p><code>TASK_GRAPHICS_SERVER</code><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_556"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_557"></a></p></td>
<td><p>Reserved for <code>WindowServer</code> or equivalent (assigned FCFS).</p></td>
</tr>

</tbody></table></div>
<p>The following code snippet shows how to set the priority of a task to tell the scheduler that it is a foreground application (regardless of whether it really is).<a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_558"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_559"></a></p>

<div class="codesample clear"><table><tbody><tr><td scope="row"><pre>#include &lt;mach/mach_init.h&gt;<span></span></pre></td></tr><tr><td scope="row"><pre>#include &lt;mach/task_policy.h&gt;<span></span></pre></td></tr><tr><td scope="row"><pre>#include &lt;mach/sched.h&gt;<span></span></pre></td></tr><tr><td scope="row"><pre> <span></span></pre></td></tr><tr><td scope="row"><pre>int set_my_task_policy(void) {<span></span></pre></td></tr><tr><td scope="row"><pre>    int ret;<span></span></pre></td></tr><tr><td scope="row"><pre>    struct task_category_policy tcatpolicy;<span></span></pre></td></tr><tr><td scope="row"><pre> <span></span></pre></td></tr><tr><td scope="row"><pre>    tcatpolicy.role = TASK_FOREGROUND_APPLICATION;<span></span></pre></td></tr><tr><td scope="row"><pre> <span></span></pre></td></tr><tr><td scope="row"><pre>    if ((ret=task_policy_set(mach_task_self(),<span></span></pre></td></tr><tr><td scope="row"><pre>        TASK_CATEGORY_POLICY, (thread_policy_t)&amp;tcatpolicy,<span></span></pre></td></tr><tr><td scope="row"><pre>        TASK_CATEGORY_POLICY_COUNT)) != KERN_SUCCESS) {<span></span></pre></td></tr><tr><td scope="row"><pre>            fprintf(stderr, "set_my_task_policy() failed.\n");<span></span></pre></td></tr><tr><td scope="row"><pre>            return 0;<span></span></pre></td></tr><tr><td scope="row"><pre>    }<span></span></pre></td></tr><tr><td scope="row"><pre>    return 1;<span></span></pre></td></tr><tr><td scope="row"><pre>}<span></span></pre></td></tr></tbody></table></div></section></section>
<section><a name="//apple_ref/doc/uid/TP30000905-CH211-BABBEEBI" title="Kernel Thread APIs"></a><h2 class="jump">Kernel Thread APIs</h2>
<p>The OS X scheduler provides a number of public APIs. While many of these APIs should not be used, the APIs to create, destroy, and alter kernel threads are of particular importance. While not technically part of the scheduler itself, they are inextricably tied to it.</p>
<p>The scheduler directly provides certain services that are commonly associated with the use of kernel threads, without which kernel threads would be of limited utility. For example, the scheduler provides support for wait queues, which are used in various synchronization primitives such as mutex locks and semaphores.</p>
<section><a name="//apple_ref/doc/uid/TP30000905-CH211-TPXREF111" title="Creating and Destroying Kernel Threads "></a><h3 class="jump">Creating and Destroying Kernel Threads </h3><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_560"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_561"></a>
<p>The recommended interface for creating threads within the kernel is through the I/O Kit. It provides <code><a href="https://developer.apple.com/documentation/kernel/1575312-iocreatethread" class="urlLink" target="_self" onclick="s_objectID=&quot;https://developer.apple.com/documentation/kernel/1575312-iocreatethread_1&quot;;return this.s_oc?this.s_oc(e):true">IOCreateThread</a></code>, <code><a href="https://developer.apple.com/documentation/kernel/iothreadself" class="urlLink" target="_self" onclick="s_objectID=&quot;https://developer.apple.com/documentation/kernel/iothreadself_1&quot;;return this.s_oc?this.s_oc(e):true">IOThreadSelf</a></code>, and <code><a href="https://developer.apple.com/documentation/kernel/1575306-ioexitthread" class="urlLink" target="_self" onclick="s_objectID=&quot;https://developer.apple.com/documentation/kernel/1575306-ioexitthread_1&quot;;return this.s_oc?this.s_oc(e):true">IOExitThread</a></code> functions that make it relatively painless to create threads in the kernel.</p><p>The basic functions for creating and terminating kernel threads are:</p>

<div class="codesample clear"><table><tbody><tr><td scope="row"><pre>IOThread IOCreateThread(IOThreadFunc function, void *argument);<span></span></pre></td></tr><tr><td scope="row"><pre>IOThread IOThreadSelf(void);<span></span></pre></td></tr><tr><td scope="row"><pre>void IOExitThread(void);<span></span></pre></td></tr></tbody></table></div>
<p><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_562"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_563"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_564"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_565"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_566"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_567"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_568"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_569"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_570"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_571"></a>With the exception of <code><a href="https://developer.apple.com/documentation/kernel/1575312-iocreatethread" class="urlLink" target="_self" onclick="s_objectID=&quot;https://developer.apple.com/documentation/kernel/1575312-iocreatethread_2&quot;;return this.s_oc?this.s_oc(e):true">IOCreateThread</a></code> (which is a bit more complex), the I/O Kit functions are fairly thin wrappers around Mach thread functions. The types involved are also very thin abstractions. <code><a href="https://developer.apple.com/documentation/kernel/iothread" class="urlLink" target="_self" onclick="s_objectID=&quot;https://developer.apple.com/documentation/kernel/iothread_1&quot;;return this.s_oc?this.s_oc(e):true">IOThread</a></code> is really the same as <code><a href="https://developer.apple.com/documentation/kernel/thread_t" class="urlLink" target="_self" onclick="s_objectID=&quot;https://developer.apple.com/documentation/kernel/thread_t_1&quot;;return this.s_oc?this.s_oc(e):true">thread_t</a></code>.</p>
<p>The <code>IOCreateThread</code> function creates a new thread that immediately begins executing the function that you specify. It passes a single argument to that function. If you need to pass more than one argument, you should dynamically allocate a data structure and pass a pointer to that structure.</p><p>For example, the following code creates a kernel thread and executes the function <code>myfunc</code> in that thread:</p>
<div class="codesample clear"><table><tbody><tr><td scope="row"><pre>#include &lt;IOKit/IOLib.h&gt;<span></span></pre></td></tr><tr><td scope="row"><pre>#include &lt;libkern/libkern.h&gt;<span></span></pre></td></tr><tr><td scope="row"><pre>#include &lt;sys/malloc.h&gt;<span></span></pre></td></tr><tr><td scope="row"><pre> <span></span></pre></td></tr><tr><td scope="row"><pre>struct mydata {<span></span></pre></td></tr><tr><td scope="row"><pre>    int three;<span></span></pre></td></tr><tr><td scope="row"><pre>    char *string;<span></span></pre></td></tr><tr><td scope="row"><pre>};<span></span></pre></td></tr><tr><td scope="row"><pre> <span></span></pre></td></tr><tr><td scope="row"><pre>static void myfunc(void *myarg) {<span></span></pre></td></tr><tr><td scope="row"><pre>    struct mydata *md = (struct mydata *)myarg;<span></span></pre></td></tr><tr><td scope="row"><pre>    IOLog("Passed %d = %s\n", md-&gt;three, md-&gt;string);<span></span></pre></td></tr><tr><td scope="row"><pre>    IOExitThread();<span></span></pre></td></tr><tr><td scope="row"><pre>}<span></span></pre></td></tr><tr><td scope="row"><pre> <span></span></pre></td></tr><tr><td scope="row"><pre>void start_threads() {<span></span></pre></td></tr><tr><td scope="row"><pre>    IOThread mythread;<span></span></pre></td></tr><tr><td scope="row"><pre>    struct mydata *md = (struct mydata *)malloc(sizeof(*md));<span></span></pre></td></tr><tr><td scope="row"><pre>    md-&gt;three = 3; md-&gt;string = (char *)malloc(2 * sizeof(char));<span></span></pre></td></tr><tr><td scope="row"><pre>    md-&gt;string[0] = '3'; md-&gt;string[1] = '\0';<span></span></pre></td></tr><tr><td scope="row"><pre> <span></span></pre></td></tr><tr><td scope="row"><pre>    // Start a thread using IOCreateThread<span></span></pre></td></tr><tr><td scope="row"><pre>    mythread = IOCreateThread(&amp;myfunc, (void *)md);<span></span></pre></td></tr><tr><td scope="row"><pre>}<span></span></pre></td></tr></tbody></table></div>
<p>One other useful function is <a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_572"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_573"></a><code><!--a-->thread_terminate<!--/a--></code>. This can be used to destroy an arbitrary thread (except, of course, the currently running thread). This can be<em> extremely </em>dangerous if not done correctly. Before tearing down a thread with <code><!--a-->thread_terminate<!--/a--></code>, you should lock the thread and disable any outstanding timers against it. If you fail to deactivate a timer, a kernel panic will occur when the timer expires.</p>
<p>With that in mind, you may be able to terminate a thread as follows:</p>

<div class="codesample clear"><table><tbody><tr><td scope="row"><pre>thread_terminate(getact_thread(thread));<span></span></pre></td></tr></tbody></table></div>
<p>There thread is of type <code><a href="https://developer.apple.com/documentation/kernel/thread_t" class="urlLink" target="_self" onclick="s_objectID=&quot;https://developer.apple.com/documentation/kernel/thread_t_2&quot;;return this.s_oc?this.s_oc(e):true">thread_t</a></code>. In general, you can only be assured that you can kill yourself, not other threads in the system. The function <code><a href="https://developer.apple.com/documentation/kernel/1418708-thread_terminate" class="urlLink" target="_self" onclick="s_objectID=&quot;https://developer.apple.com/documentation/kernel/1418708-thread_terminate_1&quot;;return this.s_oc?this.s_oc(e):true">thread_terminate</a></code> takes a single parameter of type <code><a href="https://developer.apple.com/documentation/kernel/thread_act_t" class="urlLink" target="_self" onclick="s_objectID=&quot;https://developer.apple.com/documentation/kernel/thread_act_t_1&quot;;return this.s_oc?this.s_oc(e):true">thread_act_t</a></code><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_574"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_575"></a> (a thread activation). The function <a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_576"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_577"></a><code><!--a-->getact_thread<!--/a--></code> takes a thread shuttle (<code><!--a target="_self" -->thread_shuttle_t<!--/a--></code><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_578"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_579"></a>) or <code><a href="https://developer.apple.com/documentation/kernel/thread_t" class="urlLink" target="_self" onclick="s_objectID=&quot;https://developer.apple.com/documentation/kernel/thread_t_3&quot;;return this.s_oc?this.s_oc(e):true">thread_t</a></code><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_580"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_581"></a> and returns the thread activation associated with it.</p></section>
<section><a name="//apple_ref/doc/uid/TP30000905-CH211-TPXREF112" title="SPL  and Friends"></a><h3 class="jump"><code>SPL</code>  and Friends</h3><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_582"></a>
<p>BSDâ€“based and Machâ€“based operating systems contain legacy functions designed for basic single-processor synchronization. These include functions such as <code><!--a-->splhigh<!--/a--></code><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_583"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_584"></a>, <a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_585"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_586"></a><code><!--a-->splbio<!--/a--></code>, <a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_587"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_588"></a><code><!--a-->splx<!--/a--></code>, and other similar functions. Since these functions are not particularly useful for synchronization in an SMP situation, they are not particularly useful as synchronization tools in OS X.</p>
<p>If you are porting legacy code from earlier Machâ€“based or BSDâ€“based operating systems, you must find an alternate means of providing synchronization. In many cases, this is as simple as taking the kernel or network funnel. In parts of the kernel, the use of <a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_589"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_590"></a><code><!--a-->spl<!--/a--></code> functions does nothing, but causes no harm if you are holding a funnel (and results in a panic if you are not). In other parts of the kernel, <code>spl</code> macros are actually used. Because <code><!--a-->spl<!--/a--></code> cannot necessarily be used for its intended purpose, it should not be used in general unless you are writing code it a part of the kernel that already uses it. You should instead use alternate synchronization primitives such as those described in <span class="content_text"><a href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/synchronization/synchronization.html#//apple_ref/doc/uid/TP30000905-CH218-BEHJDFCA" data-renderer-version="1" onclick="s_objectID=&quot;https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/syn_1&quot;;return this.s_oc?this.s_oc(e):true">Synchronization Primitives</a></span>.</p></section>
<section><a name="//apple_ref/doc/uid/TP30000905-CH211-TPXREF113" title="Wait Queues and Wait Primitives"></a><h3 class="jump">Wait Queues and Wait Primitives</h3><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_591"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_592"></a>
<p>The wait queue API is used extensively by the scheduler and is closely tied to the scheduler in its implementation. It is also used extensively in locks, semaphores, and other synchronization primitives. The wait queue API is both powerful and flexible, and as a result is somewhat large. Not all of the API is exported outside the scheduler, and parts are not useful outside the context of the wait queue functions themselves. This section documents only the public API.</p>
<p>The wait queue API includes the following functions:<a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_593"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_594"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_595"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_596"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_597"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_598"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_599"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_600"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_601"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_602"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_603"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_604"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_605"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_606"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_607"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_608"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_609"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_610"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_611"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_612"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_613"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_614"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_615"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_616"></a></p>

<div class="codesample clear"><table><tbody><tr><td scope="row"><pre>void wait_queue_init(wait_queue_t wq, int policy);<span></span></pre></td></tr><tr><td scope="row"><pre>extern wait_queue_t wait_queue_t wait_queue_alloc(int policy);<span></span></pre></td></tr><tr><td scope="row"><pre>void wait_queue_free(wait_queue_t wq);<span></span></pre></td></tr><tr><td scope="row"><pre>void wait_queue_lock(wait_queue_t wq);<span></span></pre></td></tr><tr><td scope="row"><pre>void wait_queue_lock_try(wait_queue_t wq);<span></span></pre></td></tr><tr><td scope="row"><pre>void wait_queue_unlock(wait_queue_t wq);<span></span></pre></td></tr><tr><td scope="row"><pre>boolean_t wait_queue_member(wait_queue_t wq, wait_queue_sub_t wq_sub);<span></span></pre></td></tr><tr><td scope="row"><pre>boolean_t wait_queue_member_locked(wait_queue_t wq, wait_queue_sub_t  wq_sub);<span></span></pre></td></tr><tr><td scope="row"><pre>kern_return_t wait_queue_link(wait_queue_t wq, wait_queue_sub_t  wq_sub);<span></span></pre></td></tr><tr><td scope="row"><pre>kern_return_t wait_queue_unlink(wait_queue_t wq, wait_queue_sub_t  wq_sub);<span></span></pre></td></tr><tr><td scope="row"><pre>kern_return_t wait_queue_unlink_one(wait_queue_t wq,<span></span></pre></td></tr><tr><td scope="row"><pre>            wait_queue_sub_t *wq_subp);<span></span></pre></td></tr><tr><td scope="row"><pre>void wait_queue_assert_wait(wait_queue_t wq, event_t event,<span></span></pre></td></tr><tr><td scope="row"><pre>            int interruptible);<span></span></pre></td></tr><tr><td scope="row"><pre>void wait_queue_assert_wait_locked(wait_queue_t wq, event_t event,<span></span></pre></td></tr><tr><td scope="row"><pre>            int interruptible, boolean_t unlocked);<span></span></pre></td></tr><tr><td scope="row"><pre>kern_return_t wait_queue_wakeup_all(wait_queue_t wq, event_t event,<span></span></pre></td></tr><tr><td scope="row"><pre>            int result);<span></span></pre></td></tr><tr><td scope="row"><pre>kern_return_t wait_queue_peek_locked(wait_queue_t wq, event_t event,<span></span></pre></td></tr><tr><td scope="row"><pre>            thread_t *tp, wait_queue_t *wqp);<span></span></pre></td></tr><tr><td scope="row"><pre>void wait_queue_pull_thread_locked(wait_queue_t wq, thread_t thread,<span></span></pre></td></tr><tr><td scope="row"><pre>            boolean_t unlock);<span></span></pre></td></tr><tr><td scope="row"><pre>thread_t wait_queue_wakeup_identity_locked(wait_queue_t wq, event_t  event,<span></span></pre></td></tr><tr><td scope="row"><pre>            int result, boolean_t unlock);<span></span></pre></td></tr><tr><td scope="row"><pre>kern_return_t wait_queue_wakeup_one(wait_queue_t wq, event_t event,<span></span></pre></td></tr><tr><td scope="row"><pre>            int result);<span></span></pre></td></tr><tr><td scope="row"><pre>kern_return_t wait_queue_wakeup_one_locked(wait_queue_t wq, event_t  event,<span></span></pre></td></tr><tr><td scope="row"><pre>            int result, boolean_t unlock);<span></span></pre></td></tr><tr><td scope="row"><pre>kern_return_t wait_queue_wakeup_thread(wait_queue_t wq, event_t  event,<span></span></pre></td></tr><tr><td scope="row"><pre>            thread_t thread, int result);<span></span></pre></td></tr><tr><td scope="row"><pre>kern_return_t wait_queue_wakeup_thread_locked(wait_queue_t wq, event_t  event,<span></span></pre></td></tr><tr><td scope="row"><pre>            thread_t thread, int result, boolean_t unlock);<span></span></pre></td></tr><tr><td scope="row"><pre>kern_return_t wait_queue_remove(thread_t thread);<span></span></pre></td></tr></tbody></table></div>
<p><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_617"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_618"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_619"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_620"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_621"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_622"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_623"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_624"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_625"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_626"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_627"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_628"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_629"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_630"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_631"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_632"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_633"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_634"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_635"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_636"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_637"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_638"></a>Most of the functions and their arguments are straightforward and are not presented in detail. However, a few require special attention.</p>
<p>Most of the functions take an event_t as an argument. These can be arbitrary 32-bit values, which leads to the potential for conflicting events on certain wait queues. The traditional way to avoid this problem is to use the address of a data object that is somehow related to the code in question as that 32-bit integer value.</p>
<p>For example, if you are waiting for an event that indicates that a new block of data has been added to a ring buffer, and if that ring bufferâ€™s head pointer was called <code>rb_head</code>, you might pass the value <code>&amp;rb_head</code> as the event ID. Because wait queue usage does not generally cross address space boundaries, this is generally sufficient to avoid any event ID conflicts.</p>
<p>Notice the functions ending in <code>_locked</code>. These functions require that your thread be holding a lock on the wait queue before they are called. Functions ending in <code>_locked</code> are equivalent to their nonlocked counterparts (where applicable) except that they do not lock the queue on entry and may not unlock the queue on exit (depending on the value of <code>unlock</code>). The remainder of this section does not differentiate between locked and unlocked functions.</p>
<p>The <code><!--a-->wait_queue_alloc<!--/a--></code> and <code><!--a-->wait_queue_init<!--/a--></code> functions take a policy parameter, which can be one of the following:</p>
<ul class="ul"><li class="li"><p><code><!--a  -->SYNC_POLICY_FIFO<!--/a--></code><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_639"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_640"></a>â€”first-in, first-out</p></li>
<li class="li"><p><code><!--a  -->SYNC_POLICY_FIXED_PRIORITY<!--/a--></code><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_641"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_642"></a>â€”policy based on thread priority</p></li>
<li class="li"><p><code><!--a  -->SYNC_POLICY_PREPOST<!--/a--></code><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_643"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_644"></a>â€”keep track of number of wakeups where no thread was waiting and allow threads to immediately continue executing without waiting until that count reaches zero. This is frequently used when implementing semaphores.</p></li></ul>
<p>You should not use the <a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_645"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_646"></a><code><!--a-->wait_queue_init<!--/a--></code> function outside the scheduler. Because a wait queue is an opaque object outside that context, you cannot determine the appropriate size for allocation. Thus, because the size could change in the future, you should always use <code><!--a-->wait_queue_alloc<!--/a--></code><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_647"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_648"></a> and <a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_649"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_650"></a><code><!--a-->wait_queue_free<!--/a--></code> unless you are writing code within the scheduler itself.</p>
<p>Similarly, the functions <a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_651"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_652"></a><code><!--a-->wait_queue_member<!--/a--></code>, <a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_653"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_654"></a><code><!--a-->wait_queue_member_locked<!--/a--></code>, <a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_655"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_656"></a><code><!--a-->wait_queue_link<!--/a--></code>, <a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_657"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_658"></a><code><!--a-->wait_queue_unlink<!--/a--></code>, and <a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_659"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_660"></a><code><!--a-->wait_queue_unlink_one<!--/a--></code> are operations on subordinate queues, which are not exported outside the scheduler.</p>
<p>The function <a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_661"></a><code><!--a-->wait_queue_member<!--/a--></code> determines whether a subordinate queue is a member of a queue.</p>
<p>The functions <code><!--a-->wait_queue_link<!--/a--></code><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_662"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_663"></a> and <code><!--a-->wait_queue_unlink<!--/a--></code><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_664"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_665"></a> link and unlink a given subordinate queue from its parent queue, respectively.</p>
<p>The function <code><!--a-->wait_queue_unlink_one<!--/a--></code><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_666"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_667"></a> unlinks the first subordinate queue in a given parent and returns it.</p>
<p>The function <code><!--a-->wait_queue_assert_wait<!--/a--></code><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_668"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_669"></a> causes the calling thread to wait on the wait queue until it is either interrupted (by a thread timer, for example) or explicitly awakened by another thread. The <code>interruptible</code> flag indicates whether this function should allow an asynchronous event to interrupt waiting.</p>
<p>The function <code><!--a-->wait_queue_wakeup_all<!--/a--></code><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_670"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_671"></a> wakes up all threads waiting on a given queue for a particular event.</p>
<p>The function <code><!--a-->wait_queue_peek_locked<!--/a--></code><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_672"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_673"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_674"></a> returns the first thread from a given wait queue that is waiting on a given event. It does not remove the thread from the queue, nor does it wake the thread. It also returns the wait queue where the thread was found. If the thread is found in a subordinate queue, other subordinate queues are unlocked, as is the parent queue. Only the queue where the thread was found remains locked.</p>
<p>The function <a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_675"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_676"></a><code><!--a-->wait_queue_pull_thread_locked<!--/a--></code> pulls a thread from the wait queue and optionally unlocks the queue. This is generally used with the result of a previous call to <a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_677"></a><code><!--a-->wait_queue_peek_locked<!--/a--></code>.</p>
<p>The function <a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_678"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_679"></a><code><!--a-->wait_queue_wakeup_identity_locked<!--/a--></code> wakes up the first thread that is waiting for a given event on a given wait queue and starts it running but leaves the thread locked. It then returns a pointer to the thread. This can be used to wake the first thread in a queue and then modify unrelated structures based on which thread was actually awakened before allowing the thread to execute.</p>
<p>The function <a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_680"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_681"></a><code><!--a-->wait_queue_wakeup_one<!--/a--></code> wakes up the first thread that is waiting for a given event on a given wait queue.</p>
<p>The function <code><!--a-->wait_queue_wakeup_thread<!--/a--></code><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_682"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_683"></a> wakes up a given thread if and only if it is waiting on the specified event and wait queue (or one of its subordinates).</p>
<p>The function <code><!--a-->wait_queue_remove<!--/a--></code><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_684"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_685"></a> wakes a given thread without regard to the wait queue or event on which it is waiting<a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_686"></a><a name="//apple_ref/doc/uid/TP30000905-CH211-DontLinkElementID_687"></a>.</p></section></section>
        <div id="pageNavigationLinks_bottom" class="pageNavigationLinks">
            <a class="nextLink" rel="next" href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/contexts/contexts.html" onclick="s_objectID=&quot;https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/con_2&quot;;return this.s_oc?this.s_oc(e):true">Next</a><a class="previousLink" rel="prev" href="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/vm/vm.html" onclick="s_objectID=&quot;https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/vm/_2&quot;;return this.s_oc?this.s_oc(e):true">Previous</a>
        </div><br>
        <div class="copyright"><br><hr><div align="center"><p class="content_text" lang="en" dir="ltr"> Copyright Â© 2002, 2013 Apple Inc. All Rights Reserved.  <a href="http://www.apple.com/legal/internet-services/terms/site.html" target="_blank" onclick="s_objectID=&quot;http://www.apple.com/legal/internet-services/terms/site.html_1&quot;;return this.s_oc?this.s_oc(e):true">Terms of Use</a>   |  <a href="http://www.apple.com/privacy/" target="_blank" onclick="s_objectID=&quot;http://www.apple.com/privacy/_1&quot;;return this.s_oc?this.s_oc(e):true">Privacy Policy</a>  |  Updated: 2013-08-08</p></div></div>

        <div id="pediaWindow">
            <div id="pediaHeader"></div>
            <div id="pediaBody"></div>
        </div>
    </article>

    <div id="blackout">
    <div id="preload"></div>
</div>
<div id="modal" aria-hidden="true">
    <div id="closebox" tabindex="0" aria-label="Close feedback form" role="button"></div>
    <div id="sending" class="hidden">
        <h2 tabindex="0">Sending feedbackâ€¦</h2>
        <div id="sending_img"></div>
    </div>
    <div id="error" class="hidden">
        <h2 tabindex="0">Weâ€™re sorry, an error has occurred.</h2>
        <p>Please try submitting your feedback later.</p>
        <div id="error_icon"></div>
    </div>
    <div id="success" class="hidden">
        <h2 tabindex="0">Thank you for providing feedback!</h2>
        <p>Your input helps improve our developer documentation.</p>
        <div id="thank_you_icon"></div>
    </div>
    
    <form id="feedback" action="https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/scheduler/scheduler.html#" method="post">
        <div class="left-leaf">
            <h2 id="helpful_title" data-asterisk="a1" tabindex="0">How helpful is this document?</h2>     
            <sup id="a1" class="asterisk" aria-hidden="true">*</sup>

            <div id="star_group" role="radiogroup" aria-required="true">
                <label> 
                    <input class="radio" type="radio" name="helped" value="1"> 
                    Very helpful
                </label>
                <label> 
                    <input class="radio" type="radio" name="helped" value="2"> 
                    Somewhat helpful
                </label>
                <label>
                    <input class="radio" type="radio" name="helped" value="3"> 
                    Not helpful
                </label>
            </div>
        </div>
        <div class="right-leaf">
            <h2>How can we improve this document?</h2>
            <div id="improve" class="checkboxes">
                <label>
                    <input type="checkbox" name="typo"> 
                    Fix typos or links
                </label>
                <label>
                    <input type="checkbox" name="infoIncorrect"> 
                    Fix incorrect information
                </label>
                <label>
                    <input type="checkbox" name="needs_examples"> 
                    Add or update code samples
                </label>
                <label>
                    <input type="checkbox" name="needs_art"> 
                    Add or update illustrations
                </label>
                <label>
                    <input type="checkbox" name="missingInfo"> 
                    Add information about...
                </label>
            </div>
        </div>

        <textarea id="comment" name="problem" cols="70" rows="8" placeholder="Please tell us more about your experience with this document" data-asterisk="a2" required=""></textarea>
        <sup id="a2" class="asterisk" aria-hidden="true">*</sup>

        <p class="fineprint">
            <em aria-hidden="true"><span>*</span> Required information</em>
        </p> 

        <input id="submit" type="button" value="Send">

        <section id="legal">
            <p>
                To submit a product bug or enhancement request, please visit the 
                <a href="https://developer.apple.com/bugreporter/" target="_blank" onclick="s_objectID=&quot;https://developer.apple.com/bugreporter/_1&quot;;return this.s_oc?this.s_oc(e):true">Bug Reporter</a> 
                page.
            </p>
            <p>
                Please read <a href="http://www.apple.com/legal/policies/ideas.html" target="_blank" onclick="s_objectID=&quot;http://www.apple.com/legal/policies/ideas.html_1&quot;;return this.s_oc?this.s_oc(e):true">Apple's Unsolicited Idea Submission Policy</a> 
                before you send us your feedback.
            </p> 
        </section>
    </form>
</div>

    
    <script charset="utf-8" src="./Mach Scheduling and Thread Interfaces_files/prototype.js"></script>
    <script src="./Mach Scheduling and Thread Interfaces_files/library.js"></script>


</body></html>